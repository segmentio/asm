// Code generated by command: go run union16_asm.go -pkg sortedset -out ../sortedset/union16_amd64.s -stubs ../sortedset/union16_amd64.go. DO NOT EDIT.

#include "textflag.h"

// func union16(dst []byte, a []byte, b []byte) (i int, j int, k int)
// Requires: AVX
TEXT Â·union16(SB), NOSPLIT, $0-96
	MOVQ dst_base+0(FP), AX
	MOVQ a_base+24(FP), CX
	MOVQ b_base+48(FP), DX
	MOVQ a_len+32(FP), BX
	ADDQ CX, BX
	MOVQ b_len+56(FP), SI
	ADDQ DX, SI

loop:
	CMPQ      CX, BX
	JE        done
	CMPQ      DX, SI
	JE        done
	VMOVUPS   (CX), X0
	VMOVUPS   (DX), X1
	VPCMPEQB  X0, X1, X2
	VPMOVMSKB X2, DI
	CMPL      DI, $0x0000ffff
	JNE       check_greater
	VMOVUPS   X0, (AX)
	ADDQ      $0x10, AX
	ADDQ      $0x10, CX
	ADDQ      $0x10, DX
	JMP       loop

check_greater:
	NOTL    DI
	BSFL    DI, R8
	MOVB    (CX)(R8*1), DI
	MOVB    (DX)(R8*1), R9
	CMPB    DI, R9
	JB      less
	VMOVUPS X1, (AX)
	ADDQ    $0x10, AX
	ADDQ    $0x10, DX
	JMP     loop

less:
	VMOVUPS X0, (AX)
	ADDQ    $0x10, AX
	ADDQ    $0x10, CX
	JMP     loop

done:
	MOVQ a_base+24(FP), BX
	SUBQ BX, CX
	MOVQ CX, i+72(FP)
	MOVQ b_base+48(FP), CX
	SUBQ CX, DX
	MOVQ DX, j+80(FP)
	MOVQ dst_base+0(FP), CX
	SUBQ CX, AX
	MOVQ AX, k+88(FP)
	VZEROUPPER
	RET
